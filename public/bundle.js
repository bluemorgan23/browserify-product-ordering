(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
//This component includes methods that deal with the data in my database
const baseUrl = "http://localhost:8088";
const API = {
  getProductsAndReviews: () => {
    return fetch(`${baseUrl}/productAndReviews?_expand=product&_expand=review`).then(response => response.json());
  }
};
var _default = API;
exports.default = _default;

},{}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reviewList = _interopRequireDefault(require("./reviewList"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// This file contains the module that contains the methods that deal with creating HTML.
// import API from "./data"
const sayHi = () => {
  return console.log("hello");
};

const htmlFactory = {
  createHtmlElement: (element, text, id, href, src, className) => {
    const newElement = document.createElement(element);

    if (text) {
      newElement.textContent = text;
    }

    if (id) {
      newElement.id = id;
    }

    if (href) {
      newElement.setAttribute("href", href);
    }

    if (src) {
      newElement.setAttribute("src", src);
    }

    if (className) {
      newElement.setAttribute("class", className);
    }

    return newElement;
  },
  clearElement: element => {
    while (element.firstChild) {
      element.removeChild(element.firstChild);
    }

    ;
    return element;
  },
  HTMLforProduct: productObject => {
    const productContainer = htmlFactory.createHtmlElement("div", undefined, `productContainer--${productObject.id}`, undefined, undefined, "card mb-1");
    productContainer.appendChild(htmlFactory.createHtmlElement("h5", productObject.product.productName, undefined, undefined, undefined, "card-header"));
    productContainer.appendChild(htmlFactory.createHtmlElement("img", undefined, `image--${productObject.id}`, undefined, productObject.product.image, "card-img"));
    const cardContainer = productContainer.appendChild(htmlFactory.createHtmlElement("div"));
    cardContainer.setAttribute("class", "card-body");
    cardContainer.setAttribute("width", "18rem;");
    cardContainer.appendChild(htmlFactory.createHtmlElement("h4", productObject.product.description, undefined, undefined, undefined, "card-subtitle mb-3 text-muted"));
    cardContainer.appendChild(htmlFactory.createHtmlElement("p", `$${productObject.product.price}`, undefined, undefined, undefined, "card-text"));
    cardContainer.appendChild(htmlFactory.createHtmlElement("p", `Quantity Available: ${productObject.product.quantity}`));
    const seeReviewButton = cardContainer.appendChild(htmlFactory.createHtmlElement("a", "See Reviews", "btn_link", "", undefined, "btn btn-info btn-large btn-block"));
    seeReviewButton.setAttribute("data-toggle", "button");
    seeReviewButton.addEventListener("click", function () {
      htmlFactory.clearElement(productContainer);
      productContainer.appendChild(_reviewList.default.reviewList(productObject));
    });
    return productContainer;
  }
};
var _default = htmlFactory;
exports.default = _default;

},{"./reviewList":6}],3:[function(require,module,exports){
"use strict";

var _navBar = _interopRequireDefault(require("./navBar"));

var _product = _interopRequireDefault(require("./product"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// import API from "./data"
// import reviewMODULE from "./reviewList"
const sayHi = () => {
  return console.log("hi");
};

const container = document.querySelector("#display-container");
container.appendChild(_navBar.default.createNavBar());
container.appendChild(_product.default.listProducts());

},{"./navBar":4,"./product":5}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _htmlFactory = _interopRequireDefault(require("./htmlFactory"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//This file contains the module that creates the nav bar
const navBarModule = {
  createNavBar: () => {
    const mainContainer = document.querySelector("#display-container");
    const navContainer = mainContainer.appendChild(_htmlFactory.default.createHtmlElement("div"));

    const navBar = _htmlFactory.default.createHtmlElement("nav", undefined, "navBar", undefined, undefined, "navbar navbar-dark bg-dark mb-1");

    navBar.appendChild(_htmlFactory.default.createHtmlElement("h1", "Betsy", "navBar-header"));
    navBar.appendChild(_htmlFactory.default.createHtmlElement("a", "Categories", "navBar-categories", "http://localhost:8080", undefined, "navbar-link"));
    navBar.appendChild(_htmlFactory.default.createHtmlElement("a", "Orders", "navBar-orders", "http://localhost:8080", undefined, "navbar-link"));
    navBar.appendChild(_htmlFactory.default.createHtmlElement("a", "Log Out", "navBar-logOut", "http://localhost:8080", undefined, "navbar-link"));
    navContainer.appendChild(navBar);
    return navContainer;
  }
};
var _default = navBarModule;
exports.default = _default;

},{"./htmlFactory":2}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _htmlFactory = _interopRequireDefault(require("./htmlFactory"));

var _data = _interopRequireDefault(require("./data"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//This component is the module for building the layout of each individual product. I plan on using one function that creates the same elements for each product lisitng.
let displayContainer = document.querySelector("#display-container");
const productModule = {
  listProducts: () => {
    const allProductsContainer = document.createElement("div");
    allProductsContainer.setAttribute("id", "products");

    _data.default.getProductsAndReviews().then(productArray => {
      productArray.forEach(product => allProductsContainer.appendChild(_htmlFactory.default.HTMLforProduct(product)));
    });

    return allProductsContainer;
  }
};
var _default = productModule;
exports.default = _default;

},{"./data":1,"./htmlFactory":2}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _htmlFactory = _interopRequireDefault(require("./htmlFactory"));

var _product = _interopRequireDefault(require("./product"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// This component includes the module that contains functions that are meant to deal with getting each review on the DOM with the correct product.
const reviewList = {
  reviewList: productObj => {
    const productsDisplay = document.querySelector("#products");
    const tempContainer = document.querySelector(`#productContainer--${productObj.id}`);
    const reviewContainer = tempContainer.appendChild(_htmlFactory.default.createHtmlElement("div", undefined, undefined, undefined, undefined, "card-body"));
    reviewContainer.appendChild(_htmlFactory.default.createHtmlElement("h5", productObj.review.userName, undefined, undefined, undefined, "card-title"));
    reviewContainer.appendChild(_htmlFactory.default.createHtmlElement("p", `Reviewed on ${productObj.review.date}`, undefined, undefined, undefined, "card-subtitle text-muted"));
    reviewContainer.appendChild(_htmlFactory.default.createHtmlElement("p", `${productObj.review.starRating} Stars`, undefined, undefined, undefined, "card-text"));
    reviewContainer.appendChild(_htmlFactory.default.createHtmlElement("p", productObj.review.review, undefined, undefined, "card-text"));
    const returnButton = reviewContainer.appendChild(_htmlFactory.default.createHtmlElement("button", "Return to Product", "btn_link-return", "", undefined, "btn btn-info btn-large btn-block"));
    returnButton.setAttribute("trigger", "click");
    reviewContainer.addEventListener("click", function () {
      _htmlFactory.default.clearElement(tempContainer);

      tempContainer.appendChild(_htmlFactory.default.HTMLforProduct(productObj));
    });
    tempContainer.appendChild(reviewContainer);
    return tempContainer;
  }
};
var _default = reviewList;
exports.default = _default;

},{"./htmlFactory":2,"./product":5}]},{},[3])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
